<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Dev Tools on Linsama's Blog</title><link>https://loveorange.github.io/tags/dev-tools/</link><description>Recent content in Dev Tools on Linsama's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 16 Nov 2024 07:34:33 +0800</lastBuildDate><atom:link href="https://loveorange.github.io/tags/dev-tools/index.xml" rel="self" type="application/rss+xml"/><item><title>修复 VSCode、Cursor 输入中文时字符颤抖问题</title><link>https://loveorange.github.io/posts/vscode-input-bug-fix/</link><pubDate>Sat, 16 Nov 2024 07:34:33 +0800</pubDate><guid>https://loveorange.github.io/posts/vscode-input-bug-fix/</guid><description>&lt;h2 id="1-引言">1. 引言
&lt;/h2>&lt;p>讲一个最近遇到的问题。在 VSCode 和 Cursor 输入中文时，editor 的文字一直在颤抖。日常写注释时影响不大，但是在写 Blog 的时候，大量的中文输入，而文字一直颤抖，体感很差。&lt;/p>
&lt;h2 id="2-解决">2. 解决
&lt;/h2>&lt;p>搜了一些资料以及尝试后，发现问题出现在 Vim 插件上，卸载或禁用 Vim 插件后，问题不再复现。&lt;/p>
&lt;p>参考：&lt;a class="link" href="https://github.com/microsoft/vscode/issues/184666" target="_blank" rel="noopener"
>VSCode 输入中文时 editor 文字颤抖&lt;/a>&lt;/p>
&lt;p>但是对于 Vim 星人来说，不使用 Vim 几乎不会打字了，那么介绍两种另外的解决办法。&lt;/p>
&lt;h3 id="21-方案一修改-vscode-配置">2.1. 方案一：修改 VSCode 配置
&lt;/h3>&lt;p>上述 Issue 中给出了解决方案，在 VSCode 配置中添加以下配置：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;#34;editor.experimentalEditContextEnabled&amp;#34;&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="kc">true&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>重启后即可生效。&lt;/p>
&lt;p>但是 Cursor 中没有这个配置，因此我们继续探索另外的解决办法。&lt;/p>
&lt;h3 id="22-方案二使用-neovim-插件">2.2. 方案二：使用 NeoVim 插件
&lt;/h3>&lt;p>对于 Vim，我更多的需求是使用 Vim 的键位，那么找一个能够提供 Vim 键位的插件即可，这里我选择的是 &lt;a class="link" href="https://marketplace.visualstudio.com/items?itemName=asvetliakov.vscode-neovim" target="_blank" rel="noopener"
>NeoVim&lt;/a>。&lt;/p>
&lt;p>除了插件外，还需要安装 NeoVim 客户端，可以使用 Homebrew 安装：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">brew install neovim
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>同样重启后生效。&lt;/p>
&lt;h2 id="3-其他的问题无法连续移动光标">3. 其他的问题：无法连续移动光标
&lt;/h2>&lt;p>安装好 NeoVim 后，发现了另一个问题，按住 &lt;code>hjkl&lt;/code> 时，无法持续移动光标，效率很差。&lt;/p>
&lt;p>这里涉及到一个 MacOS 的问题。MacOS 中有一个默认的按键重复限制，对于特定按键来说，按住时会显示字符选择框。可以在终端中针对特定的应用禁用。&lt;/p>
&lt;p>VSCode 禁用方法：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">defaults write com.microsoft.VSCode ApplePressAndHoldEnabled -bool &lt;span class="nb">false&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这里的 &lt;code>com.microsoft.VSCode&lt;/code> 是 VSCode 的 Bundle ID。&lt;/p>
&lt;p>Cursor 的 Bundle ID 不像 VSCode 这么统一，可以使用以下命令查询：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">osascript -e &lt;span class="s1">&amp;#39;id of app &amp;#34;Cursor&amp;#34;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>我显示的 Bundle ID 是 &lt;code>com.todesktop.230313mzl4w4u92&lt;/code>，因此禁用命令为：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">defaults write com.todesktop.230313mzl4w4u92 ApplePressAndHoldEnabled -bool &lt;span class="nb">false&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>需要强制退出 VSCode 和 Cursor 后生效，&lt;code>⌘ + Q&lt;/code> 一下吧。&lt;/p>
&lt;p>至此，VSCode 与 Cursor 的输入问题解决，继续开心的码代码吧～&lt;/p></description></item><item><title>Zsh 极简终端美化</title><link>https://loveorange.github.io/posts/beautiful-terminal/</link><pubDate>Fri, 15 Nov 2024 10:15:41 +0800</pubDate><guid>https://loveorange.github.io/posts/beautiful-terminal/</guid><description>&lt;img src="https://loveorange.github.io/posts/beautiful-terminal/image.png" alt="Featured image of post Zsh 极简终端美化" />&lt;h2 id="1-引言">1. 引言
&lt;/h2>&lt;blockquote>
&lt;p>&lt;del>人类的本质就是颜狗&lt;/del>&lt;/p>
&lt;p>&lt;strong>美丽的事物可以提升生产力&lt;/strong>。&lt;/p>&lt;/blockquote>
&lt;p>最近入手了新的 Mac Mini M4，新机新气象，初始化工作就从终端美化开始吧。&lt;/p>
&lt;h2 id="2-总览">2. 总览
&lt;/h2>&lt;p>本次美化先从系统自带的 &lt;strong>Terminal&lt;/strong> 入手，其他的终端工具如 &lt;strong>iTerm&lt;/strong> 等优化方式差异不大。&lt;/p>
&lt;p>主要使用：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>zsh&lt;/strong> 默认 shell&lt;/li>
&lt;li>&lt;strong>oh-my-zsh&lt;/strong> zsh 的增强&lt;/li>
&lt;li>&lt;strong>Powerlevel10k&lt;/strong> 主题&lt;/li>
&lt;li>&lt;strong>ayu&lt;/strong> 配色&lt;/li>
&lt;li>&lt;strong>Cascadia Code NF&lt;/strong> 字体&lt;/li>
&lt;/ul>
&lt;p>最终效果如下：&lt;/p>
&lt;p>&lt;img src="https://loveorange.github.io/posts/beautiful-terminal/terminal.png"
width="1490"
height="932"
srcset="https://loveorange.github.io/posts/beautiful-terminal/terminal_hu_c6e6cbe28adb300c.png 480w, https://loveorange.github.io/posts/beautiful-terminal/terminal_hu_ead094a49f15dbb7.png 1024w"
loading="lazy"
alt="Terminal 效果"
class="gallery-image"
data-flex-grow="159"
data-flex-basis="383px"
>&lt;/p>
&lt;h2 id="3-配置">3. 配置
&lt;/h2>&lt;h3 id="31-安装-zsh-与-oh-my-zsh">3.1 安装 zsh 与 oh-my-zsh
&lt;/h3>&lt;p>此处假设已经安装了 &lt;a class="link" href="https://brew.sh/" target="_blank" rel="noopener"
>homebrew&lt;/a>。&lt;/p>
&lt;p>安装 zsh 的命令十分简单，考虑还要安装 &lt;strong>oh-my-zsh&lt;/strong>，所以一起安装 &lt;strong>Git&lt;/strong>。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">brew install zsh git
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>接下来从 &lt;a class="link" href="https://ohmyz.sh/" target="_blank" rel="noopener"
>oh-my-zsh&lt;/a> 的官网获取安装命令。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sh -c &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="k">$(&lt;/span>curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh&lt;span class="k">)&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="32-安装字体">3.2 安装字体
&lt;/h3>&lt;p>为了在 Terminal 提供丰富多彩的现实，建议安装 Nerd Font，否则特殊符号无法正常显示。可以在 &lt;a class="link" href="https://www.nerdfonts.com/" target="_blank" rel="noopener"
>Nerd Fonts&lt;/a> 中选择喜欢的字体。&lt;/p>
&lt;p>作为微软信徒，我选择了微软提供的 &lt;a class="link" href="https://github.com/microsoft/cascadia-code" target="_blank" rel="noopener"
>Cascadia Code&lt;/a>，刚好官方提供了 Nerd Font 版本。&lt;/p>
&lt;h3 id="33-安装-powerlevel10k">3.3 安装 Powerlevel10k
&lt;/h3>&lt;p>默认的 oh-my-zsh 主题比较简陋，推荐使用 &lt;a class="link" href="https://github.com/romkatv/powerlevel10k" target="_blank" rel="noopener"
>Powerlevel10k&lt;/a>，提供了基本的自定义功能，可以满足大部分需求。&lt;/p>
&lt;p>安装命令如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git clone --depth&lt;span class="o">=&lt;/span>&lt;span class="m">1&lt;/span> https://github.com/romkatv/powerlevel10k.git &lt;span class="si">${&lt;/span>&lt;span class="nv">ZSH_CUSTOM&lt;/span>&lt;span class="k">:-&lt;/span>&lt;span class="nv">$HOME&lt;/span>&lt;span class="p">/.oh-my-zsh/custom&lt;/span>&lt;span class="si">}&lt;/span>/themes/powerlevel10k
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>修改 &lt;code>~/.zshrc&lt;/code> 文件，将主题设置为 &lt;code>Powerlevel10k&lt;/code>。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nv">ZSH_THEME&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;powerlevel10k/powerlevel10k&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="34-安装配色">3.4 安装配色
&lt;/h3>&lt;p>在 &lt;a class="link" href="https://github.com/mbadolato/iTerm2-Color-Schemes" target="_blank" rel="noopener"
>iterm2-colors-solarized&lt;/a> 中提供了丰富的配色方案。可以选择喜欢的配色单独下载，选择困难症也可以 clone 整个仓库慢慢纠结。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git clone https://github.com/mbadolato/iTerm2-Color-Schemes.git
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;code>terminal&lt;/code> 目录下提供了 Terminal 的配色方案。&lt;/p>
&lt;p>&lt;code>schemes&lt;/code> 目录下提供了 iTerm 的配色方案。&lt;/p>
&lt;p>我选择的是 ayu 配色，调整了透明度为 80%，模糊度为 20%。&lt;/p>
&lt;h2 id="4-总结">4. 总结
&lt;/h2>&lt;p>至此配置结束，整个过程不算复杂，基本上十分钟左右可以配置结束。&lt;/p>
&lt;p>为了尽快能够让新电脑提供生产力，本次美化还是选择了最熟悉的方案，尽量保证原有的开发习惯。&lt;/p>
&lt;p>近年也涌现出一批优秀有趣的终端工具，如 &lt;a class="link" href="https://wezfurlong.org/wezterm/" target="_blank" rel="noopener"
>WezTerm&lt;/a>，&lt;a class="link" href="https://starship.rs/" target="_blank" rel="noopener"
>Starship&lt;/a>，&lt;a class="link" href="https://sw.kovidgoyal.net/kitty/" target="_blank" rel="noopener"
>Kitty&lt;/a>，等有时间的话再慢慢尝试了。&lt;/p></description></item></channel></rss>